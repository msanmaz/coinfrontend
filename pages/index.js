import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import {
  Table,
  Thead,
  Tbody,
  Tfoot,
  Tr,
  Th,
  Td,
  TableCaption,
  TableContainer,
} from '@chakra-ui/react'
import { useEffect, useState } from 'react'
import socketIOClient from "socket.io-client";
import Nav from '../components/Navbar'
import WithBackgroundImage from '../components/Hero'



export async function getStaticProps() {
  // Call an external API endpoint to get posts.
  // You can use any data fetching library
  const res = await fetch('http://localhost:3000/crypto/bitcoin')
  const posts = await res.json()

  // By returning { props: { posts } }, the Blog component
  // will receive `posts` as a prop at build time
  return {
    props: {
      posts,
    },
    revalidate: 1,
  }
}




export default function Home({ posts }) {
  

  const [crypto,setCrypto] = useState()
  const [vanta,setVanta] = useState()


console.log(crypto)



  useEffect(() => {
    const socket = socketIOClient('http://localhost:3000');
    socket.on("data", data => {
      setCrypto(data)
    });

  }, []);


  
  return (
    <div className='min-h-screen w-full'>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <script async src="https://unpkg.com/es-module-shims@1.3.6/dist/es-module-shims.js"></script>
      </Head>
      <Nav/>
      <WithBackgroundImage/>

      <TableContainer>
        <Table variant='simple'>
          <TableCaption>Imperial to metric conversion factors</TableCaption>
          <Thead>
            <Tr>
              <Th>Rank</Th>
              <Th>Name</Th>
              <Th>Price</Th>
              <Th isNumeric>24H Change</Th>
              <Th isNumeric>Market Cap</Th>
            </Tr>
          </Thead>
          <Tbody>
            {crypto ? crypto.data?.map((item) => {
              return <Tr key={item.id}>
                <Td>{item.rank}</Td>
                <Td>{item.name}</Td>
                <Td >{item.priceUsd}</Td>
                <Td isNumeric color={item.changePercent24Hr <= 0 ? 'red.400' : 'green.500'}>{item.changePercent24Hr}%</Td>
                <Td isNumeric>{item.marketCapUsd}</Td>
              </Tr>
            })
              : <Tr><Td>Loading...</Td></Tr>}


          </Tbody>
        </Table>
      </TableContainer>


 


    </div>
  )
}
